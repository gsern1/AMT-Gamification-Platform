swagger: '2.0'
info:
  version: '1.0.0'
  title: Gamification
  description: An API to implement gamification features in the swagger-2.0 specification. 
  
    Done 
      - /bagges
    
    ToDo 
      - /levels
      (- /rules)
      (- /users)
      (- /leaderboards)
    
  contact:
    name: Guillaume Serneels
    email: guillaume.serneels@heig-vd.ch
    url: www.heig-vd.ch
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: localhost
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /badges:
    get:
      summary: Returns every badges
      description: |
        Returns every badges
      operationId: findBadges
      responses:
        '200':
          description: badges response
          schema:
            type: array
            items:
              $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      summary: Creates a new badge
      description: |
        Creates a new badge
      operationId: addBadge
      parameters:
        - name: badge
          in: body
          description: Badge object to add to the store
          required: true
          schema:
            $ref: '#/definitions/badge'
      responses:
        '200':
          description: badge response
          schema:
            $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  
  /badges/{badgeId}:   
    get:
      summary: Returns a single badge
      description: |
        Returns a single badge
      operationId: findBadge
      parameters:
        - name: badgeId
          in: path
          description: ID of badge to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: badge response
          schema:
            $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      summary: Update an existing badge
      description: |
        Update an existing badge
      operationId: UpdateBadge
      parameters:
        - name: badge
          in: body
          description: Badge object to add to the store
          required: true
          schema:
            $ref: '#/definitions/badge'
        - name: badgeId
          in: path
          description: Id of the badge that needs to be updated
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: badge response
          schema:
            $ref: '#/definitions/badge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      summary: Delete an existing badge
      description: |
        Delete an existing badge
      operationId: DeleteBadge
      parameters:
        - name: badgeId
          in: path
          description: Id of the badge that needs to be deleted
          required: true
          type: integer
          format: int64
      responses:
        '404':
          description: Badge not found
        '400':
          description: Invalid Id supplied

  /pointScales:
    get:
      summary: Returns every pointScales
      description: |
        Returns every pointScales
      operationId: findPointScales
      responses:
        '200':
          description: pointScales response
          schema:
            type: array
            items:
              $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      summary: Creates a new pointScale
      description: |
        Creates a new pointScale
      operationId: addPointScale
      parameters:
        - name: pointScale
          in: body
          description: pointScale object to add to the store
          required: true
          schema:
            $ref: '#/definitions/pointScale'
      responses:
        '200':
          description: pointScale response
          schema:
            $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  
   
  /pointScales/{pointScaleId}:   
    get:
      summary: Returns a single pointScale
      description: |
        Returns a single pointScale
      operationId: findPointScale
      parameters:
        - name: pointScaleId
          in: path
          description: ID of pointScale to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: pointScale response
          schema:
            $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      summary: Update an existing pointScale
      description: |
        Update an existing pointScale
      operationId: UpdatePointScale
      parameters:
        - name: pointScale
          in: body
          description: pointScale object to add to the store
          required: true
          schema:
            $ref: '#/definitions/pointScale'
        - name: pointScaleId
          in: path
          description: Id of the pointScale that needs to be updated
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: pointScale response
          schema:
            $ref: '#/definitions/pointScale'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      summary: Delete an existing pointScale
      description: |
        Delete an existing pointScale
      operationId: DeletePointScale
      parameters:
        - name: pointScaleId
          in: path
          description: Id of the pointScale that needs to be deleted
          required: true
          type: integer
          format: int64
      responses:
        '404':
          description: pointScale not found
        '400':
          description: Invalid Id supplied
  
  /events:
    post:
      summary: Creates a new event
      description: |
        Creates a new event
      operationId: addEvent
      parameters:
        - name: event
          in: body
          description: Badge object to add to the store
          required: true
          schema:
            $ref: '#/definitions/event'
      responses:
        '200':
          description: event response
          schema:
            $ref: '#/definitions/event'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
          
definitions:

  badge:
    type: object
    required:
      - id
      - name
      - app
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      app:
        type: integer
        format: int64
      tag:
        type: string
        
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        
  pointScale:
    type: object
    required:
      - id 
      - name
      - app
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      app:
        type: integer
        format: int64
      description:
        type: string
    
  event:
    type: object
    required:
      - id 
      - userId
      - pointScale
      - change
      - app
    properties:
      id:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
      pointScale:
        type: string
      change:
        type: integer
        format: int64
      app:
        type: integer
        format: int64

